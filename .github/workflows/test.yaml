name: Test

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Test ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-msvc
          # - aarch64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            runner: depot-ubuntu-24.04
            name: "Linux x86_64 (gnu)"
          - target: aarch64-unknown-linux-gnu
            runner: depot-ubuntu-24.04-arm
            name: "Linux aarch64 (gnu)"
          - target: x86_64-unknown-linux-musl
            runner: depot-ubuntu-24.04
            name: "Linux x86_64 (musl)"
          - target: aarch64-unknown-linux-musl
            runner: depot-ubuntu-24.04-arm
            name: "Linux aarch64 (musl)"
          - target: x86_64-apple-darwin
            runner: depot-macos-14
            name: "macOS x86_64"
          - target: aarch64-apple-darwin
            runner: depot-macos-14
            name: "macOS aarch64"
          - target: x86_64-pc-windows-msvc
            runner: depot-windows-2022
            name: "Windows x86_64"
          # - target: aarch64-pc-windows-msvc
          #   runner: windows-11-arm
          #   name: "Windows aarch64"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust Toolchain
        run: |
          rustup install 1.88.0
          rustup default 1.88.0
          rustup target add ${{ matrix.target }}
      - name: Build
        run: depot cargo build --target ${{ matrix.target }} --release
      - name: Test
        run: depot cargo test --target ${{ matrix.target }} -- --test-threads=1
